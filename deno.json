{
  "name": "ERA",
  "version": "1.0.0",
  "description": "Agentic agent factory - create agents with prompts. Includes Hono server and CLI.",
  "exports": {
    ".": "./main.ts",
    "./cli": "./cli.ts",
    "./fbi": "./core/fbi.ts",
    "./director": "./core/director.ts",
    "./prep": "./core/prep.ts",
    "./daytona": "./utils/daytona/index.ts",
    "./weave": "./utils/weave/index.ts",
    "./wandb": "./utils/wandb/index.ts",
    "./codegen": "./utils/codegen/index.ts",
    "./@daytonaio/sdk": "npm:@daytonaio/sdk"
  },
  "tasks": {
    "cli": "deno run --allow-read --allow-write --allow-env --allow-net --allow-sys cli.ts",
    "cli:create": "deno run --allow-read --allow-write --allow-env --allow-net --allow-sys cli.ts create",
    "cli:promote": "deno run --allow-read --allow-write --allow-env --allow-net --allow-sys cli.ts promote",
    "start:fizzbuzz": "deno run --allow-read --allow-write --allow-env --allow-net --allow-sys cli.ts create fizzbuzz-solver --prompt 'Create a FizzBuzz solver that prints numbers 1 to 100'",
    "start:jokemeister": "deno run --allow-read --allow-write --allow-env --allow-net --allow-sys cli.ts create jokemeister --prompt 'Create a joke-telling agent that uses wandbChat to generate jokes with step-by-step reasoning and weave tracing'",
    "start:tavily": "deno run --allow-read --allow-write --allow-env --allow-net --allow-sys cli.ts create web-researcher --prompt 'Create a web search agent that uses tavilySearch to search for information and display results'",
    "start:browserbase": "deno run --allow-read --allow-write --allow-env --allow-net --allow-sys cli.ts create ai-browser --prompt 'Create an AI web browser agent using Stagehand that navigates to docs.stagehand.dev and extracts information'",
    "start:mastra": "deno run --allow-read --allow-write --allow-env --allow-net --allow-sys cli.ts create research-team --prompt 'Create a multi-agent system using Mastra with researcher and summarizer agents'",
    "demo:daytona": "deno run --allow-net --allow-read --allow-env --allow-sys tests/daytona/demo.ts",
    "dev": "deno run --allow-net --allow-read --allow-env --allow-sys --watch main.ts",
    "serve": "deno serve --port 9995 --watch --allow-read --allow-env --allow-write --allow-net --allow-sys --allow-import ./main.ts",
    "git": "git add . && git commit -m 'bump' && git push origin main",
    "prod": "deployctl deploy --prod --project=era-agents",
    "test:wandb": "deno run --allow-net --allow-read --allow-env --allow-sys utils/wandb/test.ts",
    "test:daytona": "deno run --allow-net --allow-read --allow-env --allow-sys utils/daytona/test.ts",
    "test:director": "deno run --allow-net --allow-read --allow-env --allow-sys core/director.ts",
    "test:fbi": "deno run --allow-net --allow-read --allow-env --allow-sys core/fbi.ts",
    "test:fbi:simple": "deno run --allow-net --allow-read --allow-env --allow-sys core/fbi.ts simple",
    "test:fbi:refinement": "deno run --allow-net --allow-read --allow-env --allow-sys core/fbi.ts refinement",
    "test:prep": "deno run --allow-net --allow-read --allow-write --allow-env --allow-sys tests/test-prep-integration.ts",
    "test": "deno run --allow-net --allow-read --allow-env --allow-sys core/fbi.ts",
    "test:weave": "deno run --allow-net --allow-read --allow-env --allow-sys tests/test-weave-integration.ts",
    "test:wandb-injection": "deno run --allow-net --allow-read --allow-env --allow-sys tests/test-wandb-injection.ts",
    "test:weave-injection": "deno run --allow-net --allow-read --allow-env --allow-sys tests/test-weave-injection.ts",
    "test:agent-utils": "deno run --allow-net --allow-read --allow-env --allow-sys tests/test-agent-with-utils.ts",
    "test:registry": "deno run --allow-read --allow-env utils/registry/index.ts",
    "test:npm-codegen": "deno run --allow-net --allow-read --allow-env --allow-sys tests/test-npm-codegen.ts",
    "test:e2e-agent": "deno run --allow-net --allow-read --allow-write --allow-env --allow-sys tests/test-e2e-agent-creation.ts",
    "test:jokemeister": "deno run --allow-read --allow-env tests/test-simple-jokemeister.ts",
    "test:create-util": "deno run --allow-read --allow-env tests/test-util-creation.ts",
    "test:promotion": "deno run --allow-read --allow-env tests/test-promotion.ts",
    "test:cli": "deno run --allow-read --allow-env tests/test-cli-improvements.ts",
    "test:tavily": "deno run --allow-read --allow-env tests/test-tavily-util.ts",
    "test:browserbase": "deno run --allow-read --allow-env tests/test-browserbase-util.ts",
    "test:browserbase-index": "deno run --allow-read --allow-env --allow-net utils/browserbase/index.ts",
    "test:mastra": "deno run --allow-read --allow-env tests/test-mastra-util.ts",
    "test:mastra-index": "deno run --allow-read --allow-env utils/mastra/index.ts",
    "test:quick-start": "deno run --allow-read --allow-env tests/test-quick-start.ts"
  },
  "$schema": "https://raw.githubusercontent.com/denoland/deno/348900b8b79f4a434cab4c74b3bc8d4d2fa8ee74/cli/schemas/config-file.v1.json",
  "lock": false,
  "compilerOptions": {
    "noImplicitAny": false,
    "strict": true,
    "lib": [
      "deno.ns",
      "deno.unstable",
      "esnext",
      "dom"
    ]
  },
  "lint": {
    "rules": {
      "exclude": [
        "no-explicit-any"
      ]
    }
  },
  "fmt": {
    "useTabs": false,
    "lineWidth": 120,
    "indentWidth": 2,
    "semiColons": true,
    "singleQuote": false,
    "proseWrap": "preserve"
  },
  "nodeModulesDir": "none",
  "imports": {
    "weave": "npm:weave@latest",
    "@daytonaio/sdk": "npm:@daytonaio/sdk@latest",
    "@std/dotenv": "jsr:@std/dotenv",
    "@std/path": "jsr:@std/path",
    "@std/fs": "jsr:@std/fs",
    "@std/flags": "jsr:@std/flags",
    "@cliffy/prompt": "jsr:@cliffy/prompt@^1.0.0-rc.5"
  },
  "experimental": {
    "unstable-node-globals": true,
    "unstable-worker-options": true,
    "unstable-sloppy-imports": true
  },
  "deploy": {
    "project": "1cf65472-e492-495f-99fe-5c0dca468991",
    "exclude": [
      "**/node_modules",
      "**/dist",
      "**/agents",
      "**/.git"
    ],
    "include": [],
    "entrypoint": "core/main.ts"
  }
}
