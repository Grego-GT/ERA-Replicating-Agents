# ============================================================================
# REQUIRED: Core API Keys
# ============================================================================
# WANDB_API_KEY is ALWAYS required for Weave tracing, even when using other inference providers
WANDB_API_KEY=your_wandb_api_key_here
WANDB_PROJECT=your-team/your-project

# Daytona SDK Configuration (required for code execution)
DAYTONA_API_KEY=your_daytona_api_key_here

# ============================================================================
# REQUIRED: Global Inference Configuration
# ============================================================================
# These are used by GENERATED AGENTS when they call wandbChat()
# Even if you override specific components (Director, Codegen, etc), 
# you MUST set these global defaults for agents to work!

# Global inference URL (where generated agents send LLM requests)
INFERENCE_URL=https://api.inference.wandb.ai/v1/chat/completions
# OR use Groq: https://api.groq.com/openai/v1/chat/completions
# OR use OpenAI: https://api.openai.com/v1/chat/completions

# Global API key (can be Wandb, Groq, or OpenAI depending on INFERENCE_URL)
INFERENCE_API_KEY=your_api_key_here

# Global model (must be supported by your INFERENCE_URL provider!)
AI_MODEL=Qwen/Qwen3-Coder-480B-A35B-Instruct

# ============================================================================
# OPTIONAL: Component-Specific Overrides
# ============================================================================
# Override models/URLs for specific system components (Director, Codegen, FBI, Sluggen)
# These only affect the agent creation process, NOT the generated agents themselves
# Priority: COMPONENT_SPECIFIC → GLOBAL → DEFAULT

# ============================================================================
# EXAMPLE 1: Default (Wandb with Qwen3) - Minimal setup:
# ============================================================================
# WANDB_API_KEY=your_wandb_api_key_here
# DAYTONA_API_KEY=your_daytona_api_key_here
# AI_MODEL=Qwen/Qwen3-Coder-480B-A35B-Instruct
# (INFERENCE_URL defaults to Wandb, INFERENCE_API_KEY uses WANDB_API_KEY)

# ============================================================================
# EXAMPLE 2: Use OpenAI for everything
# ============================================================================
# WANDB_API_KEY=your_wandb_key_here  # Still needed for Weave tracing!
# INFERENCE_URL=https://api.openai.com/v1/chat/completions
# INFERENCE_API_KEY=sk-your_openai_key_here
# AI_MODEL=gpt-4o

# ============================================================================
# EXAMPLE 3: Mix & Match - Groq for speed, OpenAI for quality codegen
# ============================================================================
# REQUIRED: Set global defaults for generated agents
# WANDB_API_KEY=your_wandb_key_here  # For Weave tracing
# DAYTONA_API_KEY=your_daytona_key_here
# 
# # IMPORTANT: Global settings for generated agents (REQUIRED!)
# INFERENCE_URL=https://api.groq.com/openai/v1/chat/completions
# INFERENCE_API_KEY=gsk_your_groq_key_here
# AI_MODEL=llama-3.3-70b-versatile
#
# # OPTIONAL: Fast operations (Director, FBI, Slug) → Groq
# INFERENCE_URL_DIRECTOR=https://api.groq.com/openai/v1/chat/completions
# INFERENCE_API_KEY_DIRECTOR=gsk_your_groq_key_here
# AI_MODEL_DIRECTOR=llama-3.3-70b-versatile
#
# INFERENCE_URL_FBI=https://api.groq.com/openai/v1/chat/completions
# INFERENCE_API_KEY_FBI=gsk_your_groq_key_here
# AI_MODEL_FBI=llama-3.3-70b-versatile
#
# INFERENCE_URL_SLUGGEN=https://api.groq.com/openai/v1/chat/completions
# INFERENCE_API_KEY_SLUGGEN=gsk_your_groq_key_here
# AI_MODEL_SLUGGEN=llama-3.1-8b-instant
#
# # OPTIONAL: Quality code generation → OpenAI (or Groq)
# INFERENCE_URL_CODEGEN=https://api.openai.com/v1/chat/completions
# INFERENCE_API_KEY_CODEGEN=sk-your_openai_key_here
# AI_MODEL_CODEGEN=gpt-4o
# # OR stay with Groq:
# # INFERENCE_URL_CODEGEN=https://api.groq.com/openai/v1/chat/completions
# # INFERENCE_API_KEY_CODEGEN=gsk_your_groq_key_here
# # AI_MODEL_CODEGEN=llama-3.3-70b-versatile

# Tavily Search Configuration
# Get your API key from: https://app.tavily.com/
TAVILY_API_KEY=tvly-your_api_key_here

# Browserbase/Stagehand Configuration
# Get credentials from: https://www.browserbase.com/overview
BROWSERBASE_API_KEY=bb_your_api_key_here
BROWSERBASE_PROJECT_ID=your_project_id_here

# OpenAI API Key (required for Stagehand with GPT-4o)
OPENAI_API_KEY=sk-your_openai_key_here

# Optional: Anthropic API Key (for Stagehand with Claude)
# ANTHROPIC_API_KEY=your_anthropic_key_here

